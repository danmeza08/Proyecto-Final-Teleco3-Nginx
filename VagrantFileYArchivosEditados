Vagrant File:
Vagrant.configure("2") do |config|

 config.vm.define :cliente do |cliente|
    cliente.vm.box = "generic/centos8"
    cliente.vm.network :private_network, ip: "192.168.50.2"
    cliente.vm.hostname = "cliente"
  end


 config.vm.define :servidor do |servidor|
 servidor.vm.box = "centos/stream8"
 servidor.vm.network :private_network, ip: "192.168.50.3"
 servidor.vm.network :forwarded_port, guest: 80, host:5567
 servidor.vm.network :forwarded_port, guest: 443, host:5568
 servidor.vm.hostname = "servidor"
end



config.vm.define :servidor2 do |servidor2|
 servidor2.vm.box = "centos/stream8"
 servidor2.vm.network :private_network, ip: "192.168.50.4"
 servidor2.vm.hostname = "servidor2"
 end

config.vm.define :balanceador do |balanceador|
 balanceador.vm.box = "centos/stream8"
 balanceador.vm.network :private_network, ip: "192.168.50.5"
 balanceador.vm.hostname = "balanceador"
 end

config.vm.define :servidor3 do |servidor3|
 servidor3.vm.box = "centos/stream8"
 servidor3.vm.network :private_network, ip: "192.168.50.6"
 servidor3.vm.hostname = "servidor3"
 end

end









loadbalancer:


upstream backend {

        server 192.168.50.3;
        server 192.168.50.4;
        server 192.168.50.6;
    }

    server {
        listen      80 default_server;
        listen      [::]:80 default_server;
        server_name frontal.bitsandlinux.com;

        location / {
            proxy_redirect      off;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header    Host $http_host;
        proxy_pass http://backend;
    }
}


test.yaml

config:
  target: "http://192.168.50.30"
  phases:
    - duration: 10
      arrivalRate: 1000
scenarios:
  - name: "Mi escenario de prueba"
    flow:
      - get:
          url: "/"
          
          
          
          
          
          
          # For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    
    
    
    
    
    
    
    
    
   # Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2 default_server;
#        listen       [::]:443 ssl http2 default_server;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers PROFILE=SYSTEM;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        location / {
#        }
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }
